{"version":3,"sources":["components/Input.js","components/Textarea.js","components/InputField.js","components/Personal.js","components/Button.js","components/Experience.js","components/Education.js","components/Resume.js","App.js","index.js"],"names":["Input","props","className","type","name","value","pattern","placeholder","defaultValue","onChange","e","target","required","Textarea","InputField","label","input","inputProps","Personal","id","onNameChange","nameVal","onAddressChange","addressVal","onPhoneChange","phoneVal","onEmailChange","emailVal","Button","onClick","clickEvent","text","Experience","allBlocks","Object","keys","map","blockID","onPosChange","position","onCompChange","company","onCityChange","city","onFromChange","from","onToChange","to","onDeetsChange","details","onDeleteBlock","onAddBlock","Education","onSchoolChange","school","onDegreeChange","degree","parse","str","split","line","uniqid","num","replace","length","toLowerCase","letter","toUpperCase","Resume","address","phone","email","expBlock","eduBlock","Fragment","App","form","React","createRef","useState","formData","setFormData","handleChange","key","val","handleBlockChange","handleAddBlock","handleDeleteBlock","copy","isSubmitted","setIsSubmitted","doDisplayErrors","setDoDisplayErrors","onSubmit","preventDefault","current","reportValidity","ref","noValidate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f01f5334.chunk.js","sourcesContent":["import React from 'react';\nimport './style/input.css';\n\nconst Input = (props) => {\n  const { className, type, name, value, pattern, placeholder } = props;\n\n  function handleChange(e) {\n    props.onChange && props.onChange(e.target.value);\n  }\n\n  return (\n    <input\n      type={type}\n      name={name}\n      defaultValue={value}\n      className={className}\n      placeholder={placeholder}\n      onChange={handleChange}\n      required={true}\n      pattern={pattern || '.*'}\n    />\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nconst Textarea = (props) => {\n  const { className, placeholder, value } = props;\n\n  function handleChange(e) {\n    props.onChange && props.onChange(e.target.value);\n  }\n\n  return (\n    <textarea\n      className={className}\n      onChange={handleChange}\n      placeholder={placeholder}\n      required={true}\n      defaultValue={value}\n    />\n  );\n};\n\nexport default Textarea;\n","import React from 'react';\nimport Input from './Input.js';\nimport Textarea from './Textarea.js';\n\nimport './style/InputField.css';\n\nconst InputField = ({ label, input, ...inputProps }) => (\n  <div className=\"input-field\">\n    {label && <label>{label}</label>}\n    {input === true && <Input {...inputProps} />}\n    {input === false && <Textarea {...inputProps} />}\n  </div>\n);\n\nexport default InputField;\n","import React from 'react';\nimport InputField from './InputField.js';\nimport './style/Personal.css';\n\nconst Personal = (props) => (\n  <section id=\"personal\">\n    <InputField\n      input={true}\n      className=\"name-input\"\n      label=\"Name\"\n      name=\"name\"\n      type=\"text\"\n      onChange={props.onNameChange}\n      value={props.nameVal}\n    />\n    <InputField\n      input={true}\n      className=\"address-input\"\n      label=\"Address\"\n      name=\"address\"\n      type=\"text\"\n      onChange={props.onAddressChange}\n      value={props.addressVal}\n    />\n    <InputField\n      input={true}\n      className=\"phone-input\"\n      label=\"Phone\"\n      name=\"phone\"\n      pattern=\"^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$\"\n      type=\"text\"\n      onChange={props.onPhoneChange}\n      value={props.phoneVal}\n    />\n    <InputField\n      input={true}\n      className=\"email-input\"\n      label=\"Email\"\n      name=\"email\"\n      type=\"email\"\n      onChange={props.onEmailChange}\n      value={props.emailVal}\n    />\n  </section>\n);\n\nexport default Personal;\n","import React from 'react';\nimport './style/button.css';\n\nconst Button = (props) => (\n  <button\n    className={(props.className && props.className) || 'btn'}\n    onClick={props.clickEvent}\n    type={props.type || 'button'}\n  >\n    {props.text}\n  </button>\n);\nexport default Button;\n","import React from 'react';\n\nimport InputField from './InputField.js';\nimport Button from './Button.js';\n\nconst Experience = (props) => {\n  const { allBlocks } = props;\n\n  return (\n    <section>\n      <h2>Experience</h2>\n      {allBlocks &&\n        Object.keys(allBlocks).map((blockID) => {\n          const id = blockID;\n          return (\n            <div key={id}>\n              <InputField\n                input={true}\n                className=\"position-input\"\n                label=\"Position\"\n                name={`${id}-position`}\n                type=\"text\"\n                onChange={(e) => props.onPosChange(e, id)}\n                value={allBlocks[id].position || ''}\n              />\n              <InputField\n                input={true}\n                className=\"company-input\"\n                label=\"Company\"\n                name={`${id}-company`}\n                type=\"text\"\n                onChange={(e) => props.onCompChange(e, id)}\n                value={allBlocks[id].company || ''}\n              />\n              <InputField\n                input={true}\n                className=\" city-input\"\n                label=\"City\"\n                name={`${id}-city`}\n                type=\"text\"\n                onChange={(e) => props.onCityChange(e, id)}\n                value={allBlocks[id].city || ''}\n              />\n              <InputField\n                input={true}\n                className=\"from-input\"\n                label=\"From\"\n                name={`${id}-from`}\n                type=\"text\"\n                onChange={(e) => props.onFromChange(e, id)}\n                value={allBlocks[id].from || ''}\n              />\n              <InputField\n                input={true}\n                className=\"to-input\"\n                label=\"To\"\n                name={`${id}-to`}\n                type=\"text\"\n                onChange={(e) => props.onToChange(e, id)}\n                value={allBlocks[id].to || ''}\n              />\n              <InputField\n                input={false}\n                className=\"job-details-input\"\n                placeholder=\"lines will be converted to bullet points\"\n                label=\"Details\"\n                onChange={(e) => props.onDeetsChange(e, id)}\n                value={allBlocks[id].details || ''}\n              />\n\n              <Button\n                text=\"Delete\"\n                className=\"del-btn\"\n                clickEvent={() => {\n                  props.onDeleteBlock(id);\n                }}\n              />\n            </div>\n          );\n        })}\n      <Button text=\"Add\" clickEvent={props.onAddBlock} />\n    </section>\n  );\n};\n\nexport default Experience;\n","import React from 'react';\n\nimport InputField from './InputField.js';\nimport Button from './Button.js';\n\nimport './style/Block.css';\n\nconst Education = (props) => {\n  const { allBlocks } = props;\n\n  return (\n    <section>\n      <h2>Education</h2>\n      {allBlocks &&\n        Object.keys(allBlocks).map((blockID) => {\n          const id = blockID;\n          return (\n            <div key={id}>\n              <InputField\n                input={true}\n                className=\"school-name-input\"\n                label=\"School Name\"\n                name={`${id}-name`}\n                type=\"text\"\n                onChange={(e) => props.onSchoolChange(e, id)}\n                value={allBlocks[id].school || ''}\n              />\n              <InputField\n                input={true}\n                className=\"city-input\"\n                label=\"City\"\n                name={`${id}-city`}\n                type=\"text\"\n                onChange={(e) => props.onCityChange(e, id)}\n                value={allBlocks[id].city || ''}\n              />\n              <InputField\n                input={true}\n                className=\" degree-input\"\n                label=\"Degree\"\n                name={`${id}-degree`}\n                type=\"text\"\n                onChange={(e) => props.onDegreeChange(e, id)}\n                value={allBlocks[id].degree || ''}\n              />\n              <InputField\n                input={true}\n                className=\"from-input\"\n                label=\"From\"\n                name={`${id}-from`}\n                type=\"text\"\n                onChange={(e) => props.onFromChange(e, id)}\n                value={allBlocks[id].from || ''}\n              />\n              <InputField\n                input={true}\n                className=\"to-input\"\n                label=\"To\"\n                name={`${id}-to`}\n                type=\"text\"\n                onChange={(e) => props.onToChange(e, id)}\n                value={allBlocks[id].to || ''}\n              />\n              <Button\n                text=\"Delete\"\n                className=\"del-btn\"\n                clickEvent={() => {\n                  props.onDeleteBlock(id);\n                }}\n              />\n            </div>\n          );\n        })}\n      <Button text=\"Add\" clickEvent={props.onAddBlock} />\n    </section>\n  );\n};\n\nexport default Education;\n","import React from 'react';\n\nimport uniqid from 'uniqid';\n\nconst parse = {\n  details(str) {\n    return str.split('\\n').map((line) => <li key={uniqid()}>{line}</li>);\n  },\n  phone(num) {\n    num = num.replace(/[^\\d]/g, '');\n    if (num.length === 10)\n      return num.replace(/(\\d{3})(\\d{3})(\\d{4})/, '($1) $2-$3');\n  },\n  capitalizeEveryWord(str) {\n    return str.toLowerCase().replace(/^\\w|\\s\\w/g, function (letter) {\n      return letter.toUpperCase();\n    });\n  },\n};\n\nconst Resume = (props) => {\n  const { name, address, phone, email, expBlock, eduBlock } = props;\n  return (\n    <React.Fragment>\n      <div>\n        <h2>{parse.capitalizeEveryWord(name)}</h2>\n        <p>{parse.capitalizeEveryWord(address)}</p>\n        <p>{parse.phone(phone)}</p>\n        <p>{email}</p>\n      </div>\n      {expBlock && (\n        <div>\n          <h3>Experience</h3>\n          {Object.keys(expBlock).map((blockID) => (\n            <div key={uniqid()}>\n              <p>{parse.capitalizeEveryWord(expBlock[blockID].position)}</p>\n              <p>{expBlock[blockID].company}</p>\n              <p>{expBlock[blockID].city}</p>\n              <p>\n                {expBlock[blockID].from} - {expBlock[blockID].to}\n              </p>\n              <ul>{parse.details(expBlock[blockID].details)}</ul>\n            </div>\n          ))}\n        </div>\n      )}\n      {eduBlock && (\n        <div>\n          <h3>Education</h3>\n          {Object.keys(eduBlock).map((blockID) => (\n            <div key={uniqid()}>\n              <p>{eduBlock[blockID].school}</p>\n              <p>{eduBlock[blockID].city}</p>\n              <p>{eduBlock[blockID].degree}</p>\n              <p>\n                {eduBlock[blockID].from} - {eduBlock[blockID].to}\n              </p>\n            </div>\n          ))}\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Resume;\n","import React, { useState } from 'react';\nimport Personal from './components/Personal.js';\nimport Experience from './components/Experience.js';\nimport Education from './components/Education.js';\nimport Button from './components/Button.js';\nimport Resume from './components/Resume.js';\n\nimport uniqid from 'uniqid';\n\nimport './globalStyles.css';\n\nconst App = () => {\n  const form = React.createRef();\n\n  const [formData, setFormData] = useState({});\n  function handleChange(key, val) {\n    setFormData({ ...formData, [key]: val });\n  }\n  function handleBlockChange(type, blockID, key, val) {\n    setFormData({\n      ...formData,\n      [type]: {\n        ...formData[type],\n        [blockID]: { ...formData[type][blockID], [key]: val },\n      },\n    });\n  }\n  function handleAddBlock(type) {\n    const blockID = uniqid();\n\n    setFormData({ ...formData, [type]: { ...formData[type], [blockID]: {} } });\n  }\n  function handleDeleteBlock(type, id) {\n    const copy = { ...formData[type] };\n    delete copy[id];\n    setFormData({ ...formData, [type]: copy });\n  }\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [doDisplayErrors, setDoDisplayErrors] = useState(false);\n  function onSubmit(e) {\n    e.preventDefault();\n    if (!form.current.reportValidity()) return setDoDisplayErrors(true);\n\n    setIsSubmitted(true);\n  }\n\n  return (\n    <div id=\"resume\">\n      {isSubmitted === true && (\n        <div>\n          <Button\n            type=\"button\"\n            text=\"Edit\"\n            clickEvent={() => setIsSubmitted(false)}\n          />\n          <Resume\n            name={formData.name}\n            address={formData.address}\n            phone={formData.phone}\n            email={formData.email}\n            expBlock={formData.expBlock}\n            eduBlock={formData.eduBlock}\n          />\n        </div>\n      )}\n      {isSubmitted === false && (\n        <form\n          ref={form}\n          onSubmit={onSubmit}\n          className={doDisplayErrors ? 'display-errors' : ''}\n          noValidate\n        >\n          <Personal\n            onNameChange={(e) => handleChange('name', e)}\n            onAddressChange={(e) => handleChange('address', e)}\n            onPhoneChange={(e) => handleChange('phone', e)}\n            onEmailChange={(e) => handleChange('email', e)}\n            nameVal={formData.name}\n            addressVal={formData.address}\n            phoneVal={formData.phone}\n            emailVal={formData.email}\n          />\n          <Experience\n            onPosChange={(e, id) =>\n              handleBlockChange('expBlock', id, 'position', e)\n            }\n            onCompChange={(e, id) =>\n              handleBlockChange('expBlock', id, 'company', e)\n            }\n            onCityChange={(e, id) =>\n              handleBlockChange('expBlock', id, 'city', e)\n            }\n            onFromChange={(e, id) =>\n              handleBlockChange('expBlock', id, 'from', e)\n            }\n            onToChange={(e, id) => handleBlockChange('expBlock', id, 'to', e)}\n            onDeetsChange={(e, id) =>\n              handleBlockChange('expBlock', id, 'details', e)\n            }\n            onAddBlock={() => handleAddBlock('expBlock')}\n            onDeleteBlock={(id) => handleDeleteBlock('expBlock', id)}\n            allBlocks={formData.expBlock || ''}\n          />\n          <Education\n            onSchoolChange={(e, id) =>\n              handleBlockChange('eduBlock', id, 'school', e)\n            }\n            onCityChange={(e, id) =>\n              handleBlockChange('eduBlock', id, 'city', e)\n            }\n            onDegreeChange={(e, id) =>\n              handleBlockChange('eduBlock', id, 'degree', e)\n            }\n            onFromChange={(e, id) =>\n              handleBlockChange('eduBlock', id, 'from', e)\n            }\n            onToChange={(e, id) => handleBlockChange('eduBlock', id, 'to', e)}\n            onAddBlock={() => handleAddBlock('eduBlock')}\n            onDeleteBlock={(id) => handleDeleteBlock('eduBlock', id)}\n            allBlocks={formData.eduBlock || ''}\n          />\n          <Button text=\"Submit\" type=\"submit\" onSubmit={(e) => onSubmit(e)} />\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}